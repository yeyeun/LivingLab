{"version":3,"file":"static/js/847.efb5478d.chunk.js","mappings":"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","sources":["api/kakaoApi.js","util/HorizontalLine.js","components/user/KakaoLoginComponent.js","components/user/FindIdModal.js","components/user/FindPwdModal.js","api/emailApi.js","components/user/LoginComponent.js","pages/user/LoginPage.js"],"sourcesContent":["// <REST API를 사용한 카카오 로그인 과정>\r\n// [1. 인가 코드 받기]\r\n// 1) 서비스 서버가 카카오 인증 서버로 인가 코드 받기를 요청합니다.\r\n// 2) 카카오 인증 서버가 사용자에게 카카오계정 로그인을 통한 인증을 요청합니다.\r\n// - 클라이언트에 유효한 카카오계정 세션이 있거나, 카카오톡 인앱 브라우저에서의 요청인 경우 4단계로 넘어갑니다.\r\n// 3) 사용자가 카카오계정으로 로그인합니다.\r\n// 4) 카카오 인증 서버가 사용자에게 동의 화면을 출력하여 인가를 위한 사용자 동의를 요청합니다.\r\n// - 동의 화면은 서비스 애플리케이션(이하 앱)의 동의항목 설정에 따라 구성됩니다.\r\n// 5) 사용자가 필수 동의항목, 이 외 원하는 동의항목에 동의한 뒤 [동의하고 계속하기] 버튼을 누릅니다.\r\n// 6)카카오 인증 서버는 서비스 서버의 Redirect URI로 인가 코드를 전달합니다.\r\n\r\n// [2. 토큰 받기 (1에서 전달받은 인가 코드로 토큰 발급을 요청)]\r\n// 1) 서비스 서버가 Redirect URI로 전달받은 인가 코드로 토큰 받기를 요청합니다.\r\n// 2) 카카오 인증 서버가 토큰을 발급해 서비스 서버에 전달합니다.\r\n\r\nimport axios from 'axios';\r\nimport { API_SERVER_HOST } from './userApi';\r\n\r\nconst rest_api_key = 'ea0feb168fdd4ed8456013d8b2f26c49'; // 이메일 나오는 rest api 키 받음\r\n\r\nconst redirect_uri = 'http://223.130.157.92:22222/user/kakao'; //카카오 로그인에서 사용할 OAuth Redirect URI를 설정\r\n\r\nconst auth_code_path = 'https://kauth.kakao.com/oauth/authorize'; // 인가 코드 받는 경로\r\n\r\nconst access_token_url = 'https://kauth.kakao.com/oauth/token'; // 토큰 받는 경로\r\n\r\n// 1. 인가 코드 받기를 요청 (GET)\r\n// - 사용자가 서비스에서 카카오 로그인 버튼 클릭 시,\r\n// - 카카오 인증 서버로 인가코드(code) 발급 요청\r\n// redirect_uri에 GET 요청으로 전달\r\n// 카카오 인증 서버는 인가코드를 발급해 서비스 서버의 Redirect URI로 인가 코드를 전달\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n// 기존 로그인 여부와 상관없이 로그인 하기(맨뒤에 prompt=login을 추가)\r\n// 이 기능을 사용하면 사용자가 브라우저에 카카오 계정으로 로그인되어 있는 상태라도\r\n// 다시 카카오 계정으로 로그인하는 과정을 거쳐 서비스에 카카오 로그인하도록 할 수 있다.\r\n// 인가 코드 받기 요청시 prompt 파리미터 값을 login으로 지정\r\nexport const getKakaoLoginLink = () => {\r\n  const kakaoURL = `${auth_code_path}?client_id=${rest_api_key}&redirect_uri=${redirect_uri}&response_type=code&prompt=login`;\r\n  //const kakaoURL = `${auth_code_path}?client_id=${rest_api_key}&redirect_uri=${redirect_uri}&response_type=code`;\r\n\r\n  return kakaoURL;\r\n};\r\n\r\n// 2. 인가 코드로 토큰 발급을 요청 (POST)\r\n// - 서비스는 전달받은 인가 코드로 토큰을 요청하여 Access Token과 Refresh 토큰을 발급받는다.\r\n// 인가 코드 받기만으로는 카카오 로그인이 완료되지 않는다.\r\n// 토큰 받기까지 마쳐야 카카오 로그인을 정상적으로 완료할 수 있다.\r\nexport const getAccessToken = async (authCode) => {\r\n  const header = {\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n    },\r\n  };\r\n\r\n  const params = {\r\n    grant_type: 'authorization_code',\r\n    client_id: rest_api_key,\r\n    redirect_uri: redirect_uri,\r\n    code: authCode,\r\n  };\r\n\r\n  // 필수 파라미터(params)를 포함해 POST로 요청\r\n  const res = await axios.post(access_token_url, params, header);\r\n\r\n  // 요청 성공시, 응답은 토큰(accessToken)과 토큰 정보를 포함한다.\r\n  const accessToken = res.data.access_token;\r\n\r\n  return accessToken; // 토큰 발급\r\n};\r\n\r\n// 리액트에서 api 서버 호출\r\nexport const getUserWithAccessToken = async (accessToken) => {\r\n  const res = await axios.get(`${API_SERVER_HOST}/api/user/kakao?accessToken=${accessToken}`);\r\n\r\n  return res.data;\r\n};","import React from 'react';\r\n\r\nconst HorizonLine = ({ text }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        borderBottom: '1px solid #aaa',\r\n        lineHeight: '0.1em',\r\n        margin: '10px 0 20px',\r\n      }}\r\n    >\r\n      <span style={{ background: '#fff', padding: '0 10px' }}>{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizonLine;\r\n","import { getKakaoLoginLink } from '../../api/kakaoApi';\r\nimport { Link } from 'react-router-dom';\r\nimport kakaoLoginWideImg from '../../resources/images/kakao_login_medium_wide.png';\r\n\r\nconst link = getKakaoLoginLink();\r\n\r\nconst KakaoLoginComponent = () => {\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"text-center text-blue-500\">\r\n        로그인시에 자동 가입처리 됩니다\r\n      </div>\r\n      <div className=\"flex justify-center w-full my-3\">\r\n        <Link to={link}>\r\n          <img src={kakaoLoginWideImg} alt=\"kakaoLogin\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KakaoLoginComponent;\r\n","const FindIdModal = ({ title, isVisible, onClose, children }) => {\r\n  return(\r\n      <div\r\n      style={{\r\n        opacity: isVisible ? 1 : 0,\r\n        visibility: isVisible ? 'visible' : 'hidden',\r\n        transition: 'opacity 0.2s ease-in-out, visibility 0.2s ease-in-out',\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: '20px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n      }}\r\n      className=\"z-50 flex h-full w-full items-center justify-center bg-black bg-opacity-20\"\r\n      onClick={onClose}\r\n    >\r\n      <div\r\n        className=\"relative bg-white shadow opacity-100 w-1/4 rounded-md px-6 min-w-[300px] flex flex-col items-center\"\r\n        onClick={(e) => e.stopPropagation()} // Prevent closing modal on inner click\r\n      >\r\n        <div className=\"w-full text-center bg-warming-400 mt-6 mb-6 pb-2 text-base border-b-2 border-gray-300\">\r\n          {title}\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindIdModal;","const FindPwdModal = ({ title, isVisible, onClose, children }) => {\r\n  return(\r\n      <div\r\n      style={{\r\n        opacity: isVisible ? 1 : 0,\r\n        visibility: isVisible ? 'visible' : 'hidden',\r\n        transition: 'opacity 0.2s ease-in-out, visibility 0.2s ease-in-out',\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: '20px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n      }}\r\n      className=\"z-50 flex h-full w-full items-center justify-center bg-black bg-opacity-20\"\r\n      onClick={onClose}\r\n    >\r\n      <div\r\n        className=\"relative bg-white shadow opacity-100 w-1/4 rounded-md px-6 min-w-[300px] flex flex-col items-center\"\r\n        onClick={(e) => e.stopPropagation()} // Prevent closing modal on inner click\r\n      >\r\n        <div className=\"w-full text-center bg-warming-400 mt-6 mb-6 pb-2 text-base border-b-2 border-gray-300\">\r\n          {title}\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindPwdModal;","import axios from 'axios';\r\nexport const API_SERVER_HOST = 'http://223.130.157.92:22222';\r\n\r\nconst host = `${API_SERVER_HOST}/mail`;\r\n\r\n// 이메일 입력 시 인증번호 이메일로 발송\r\nexport const mailSend = async (email) => {\r\n  const header = { headers: { 'Content-Type': 'application/json' } };\r\n  const res = await axios.post(`${host}/send`, email , header);\r\n  return res.data;\r\n};","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login  } from '../../slices/loginSlice';\r\nimport imgLogo2 from '../../resources/images/logo2.png';\r\nimport HorizonLine from '../../util/HorizontalLine';\r\nimport KakaoLoginComponent from './KakaoLoginComponent';\r\nimport useCustomLogin from '../../hooks/useCustomLogin';\r\nimport { loginPost } from '../../api/userApi';\r\nimport FindIdModal from './FindIdModal';\r\nimport FindPwdModal from './FindPwdModal';\r\nimport { mailSend } from '../../api/emailApi'\r\nimport { findId } from '../../api/userApi'\r\nimport { findPwd } from '../../api/userApi'\r\n\r\nconst initState = {\r\n  email: '',\r\n  pwd: '',\r\n};\r\n\r\nfunction LoginComponent(props) {\r\n  const [loginParam, setLoginParam] = useState({ ...initState });\r\n  const { moveToLogin, moveToPath, moveToJoin } = useCustomLogin();\r\n  const [findIdModal, setFindIdModal] = useState(false);\r\n  const [findPwdModal, setFindPwdModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [step, setStep] = useState(0);\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [authNum, setAuthNum] = useState('');\r\n  const [inputNum, setInputNum] = useState('');\r\n  const [pwd, setPwd] = useState('');\r\n  \r\n\r\n  const handleChange = (e) => {\r\n    loginParam[e.target.name] = e.target.value;\r\n\r\n    setLoginParam({ ...loginParam });\r\n  };\r\n\r\n  const handleClickLogin = (e) => {\r\n    loginPost(loginParam).then((userInfo) => {\r\n      console.log('----------------------------');\r\n      console.log(userInfo);\r\n      dispatch(login(userInfo));\r\n\r\n      // 로그인 후 메인으로\r\n      if (userInfo.email != null) {\r\n        //성공\r\n        alert('로그인 되었습니다.');\r\n        moveToPath('/');\r\n      } else {\r\n        alert('이메일 혹은 비밀번호를 다시 한번 확인해주세요');\r\n        moveToLogin(); // 실패\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setPwd(null);\r\n    setFindIdModal(false);\r\n    setFindPwdModal(false);\r\n  };\r\n\r\n  const handleClickFindId = () => {\r\n    setFindIdModal(true);\r\n    setStep(0); // 초기 단계로 설정\r\n  };\r\n\r\n  const handleClickFindPwd = () => {\r\n    setFindPwdModal(true);\r\n    setStep(0); // 초기 단계로 설정\r\n  };\r\n\r\n  const handleFindId = async () => {  //Id 찾기\r\n    const response = await findId({ name, phone });\r\n    setMessage(response.message);\r\n    setStep((prevStep) => prevStep + 1);\r\n  };\r\n\r\n  const handleFindPwd = async () => { //비밀번호 찾기위한 이메일 인증받기\r\n    const response = await mailSend({ email });\r\n    console.log(\"인증번호:\"+authNum);\r\n    setAuthNum(response.data)\r\n    setStep((prevStep) => prevStep + 1);\r\n  };\r\n\r\n  const handleCheckNum = async () => {  //이메일 인증 번호와 비교하기\r\n    if(authNum === inputNum){ //인증번호 일치시\r\n      const response = await findPwd(email);\r\n      setPwd(response.data)\r\n      setStep((prevStep) => prevStep + 1);\r\n    } else {  //인증번호 불일치 시\r\n      setStep(3);\r\n    }\r\n  };\r\n  \r\n\r\n  const renderContentId = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <div className=\"w-full text-center text-sm pt-4 pb-4\">\r\n              <span>회원정보에 등록된 이름과 전화번호를 입력해주세요</span>\r\n            </div>\r\n            <div class=\"w-full my-2 transform border-b-2 bg-transparent text-base duration-300 focus-within:border-teal-700\">\r\n              <input type=\"text\" placeholder=\"이름\" class=\"w-full p-1 border-none bg-transparent outline-none focus:outline-none\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}/>\r\n            </div>\r\n            <div class=\"w-full my-2 transform border-b-2 bg-transparent text-base duration-300 focus-within:border-teal-700\">\r\n              <input type=\"text\" placeholder=\"전화번호\" class=\"w-full p-1 border-none bg-transparent outline-none focus:outline-none\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}/>\r\n            </div>\r\n            <div className=\"w-full flex justify-center mt-5 mb-4\">\r\n              <button onClick={handleFindId} className=\"rounded bg-mainColor mt-4 mb-4 mr-2 px-4 py-1 text-base text-white hover:bg-teal-500 transition-colors\">\r\n                아이디 찾기\r\n              </button>\r\n              <button\r\n                className=\"rounded bg-slate-400 mt-4 mb-4 px-4 py-1 text-base text-white hover:bg-slate-500 transition-colors\"\r\n                onClick={handleModalClose}\r\n              >\r\n              닫기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <div className=\"w-full text-center text-sm pt-4 pb-4\">\r\n              <span>{message}</span>\r\n            </div>\r\n            <div className=\"w-full flex justify-center mt-5 mb-4\">\r\n              <button\r\n                className=\"rounded bg-slate-400 mt-4 mb-4 px-4 py-1 text-base text-white hover:bg-slate-500 transition-colors\"\r\n                onClick={handleModalClose}\r\n              >\r\n              닫기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>일시적인 오류입니다. 다시 실행해주세요</p>\r\n    }\r\n  };\r\n\r\n  const renderContentPwd = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <div className=\"w-full text-center text-sm pt-4 pb-4\">\r\n              <span>회원정보에 등록된 이메일 주소를 입력해주세요</span>\r\n            </div>\r\n            <div class=\"w-full my-2 transform border-b-2 bg-transparent text-base duration-300 focus-within:border-teal-700\">\r\n              <input type=\"email\" placeholder=\"이메일 주소\" class=\"w-full p-1 border-none bg-transparent outline-none focus:outline-none\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}/>\r\n            </div>\r\n            <div className=\"w-full flex justify-center mt-5 mb-4\">\r\n              <button onClick={handleFindPwd} className=\"rounded bg-mainColor mt-4 mb-4 mr-2 px-4 py-1 text-base text-white hover:bg-teal-500 transition-colors\">\r\n                인증번호 발송\r\n              </button>\r\n              <button\r\n                className=\"rounded bg-slate-400 mt-4 mb-4 px-4 py-1 text-base text-white hover:bg-slate-500 transition-colors\"\r\n                onClick={handleModalClose}\r\n              >\r\n              닫기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <div className=\"w-full text-center text-sm pt-4 pb-4\">\r\n              <span>인증번호를 입력하세요</span>\r\n            </div>\r\n            <div class=\"w-full my-2 transform border-b-2 bg-transparent text-base duration-300 focus-within:border-teal-700\">\r\n              <input type=\"text\" placeholder=\"인증번호\" class=\"w-full p-1 border-none bg-transparent outline-none focus:outline-none\"\r\n              value={inputNum}\r\n              onChange={(e) => setInputNum(e.target.value)}/>\r\n            </div>\r\n            <div className=\"w-full flex justify-center mt-5 mb-4\">\r\n              <button onClick={handleCheckNum} className=\"rounded bg-mainColor mt-4 mb-4 mr-2 px-4 py-1 text-base text-white hover:bg-teal-500 transition-colors\">\r\n                인증하기\r\n              </button>\r\n              <button\r\n                className=\"rounded bg-slate-400 mt-4 mb-4 px-4 py-1 text-base text-white hover:bg-slate-500 transition-colors\"\r\n                onClick={handleModalClose}\r\n              >\r\n              닫기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return(\r\n          <div>\r\n          <div className=\"w-full text-center text-base pt-4 pb-4\">\r\n            <span>등록된 비밀번호는 {pwd}입니다</span>\r\n          </div>\r\n          <div className=\"w-full flex justify-center mt-5 mb-4\">\r\n            <button\r\n              className=\"rounded bg-slate-400 mt-4 mb-4 px-4 py-1 text-base text-white hover:bg-slate-500 transition-colors\"\r\n              onClick={handleModalClose}\r\n            >\r\n            닫기\r\n            </button>\r\n          </div>\r\n        </div>\r\n        );\r\n        case 3:\r\n        return(\r\n          <div>\r\n          <div className=\"w-full text-center text-base pt-4 pb-4\">\r\n            <span>인증번호가 일치하지 않습니다. 다시 시도해 주세요</span>\r\n          </div>\r\n          <div className=\"w-full flex justify-center mt-5 mb-4\">\r\n            <button\r\n              className=\"rounded bg-slate-400 mt-4 mb-4 px-4 py-1 text-base text-white hover:bg-slate-500 transition-colors\"\r\n              onClick={handleModalClose}\r\n            >\r\n            닫기\r\n            </button>\r\n          </div>\r\n        </div>\r\n        );\r\n      default:\r\n        return <p>일시적인 오류입니다. 다시 실행해주세요</p>\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-h-400\">\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"text-4xl m-1 p-1 font-extrabold\">\r\n          <img src={imgLogo2} alt=\"imgLogo2\" className=\"object-contain h-48 w-96 ...\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"border border-slate-300 p-4 shadow-md\">\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"relative flex w-full flex-wrap items-stretch\">\r\n            <div className=\"w-full py-3 text-left font-bold\">이메일</div>\r\n            <input\r\n              className=\"w-full p-3 rounded-r border border-solid border-neutral-500 shadow-md\"\r\n              name=\"email\"\r\n              type={'text'}\r\n              placeholder=\"이메일을 입력해주세요\"\r\n              value={loginParam.email}\r\n              onChange={handleChange}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"relative mb-10 flex w-full flex-wrap items-stretch\">\r\n            <div className=\"w-full py-3 text-left font-bold\">비밀번호</div>\r\n            <input\r\n              className=\"w-full p-3 rounded-r border border-solid border-neutral-500 shadow-md\"\r\n              name=\"pwd\"\r\n              type={'password'}\r\n              placeholder=\"비밀번호를 입력해주세요\"\r\n              value={loginParam.pwd}\r\n              onChange={handleChange}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"relative mb-4 flex w-full justify-center\">\r\n            <div className=\"w-full flex justify-center font-bold\">\r\n              <button className=\"rounded p-2 w-full bg-slate-700 text-xl text-white hover:bg-black transition-colors\"\r\n              onClick={handleClickLogin}>\r\n                로그인\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"relative mb-2 flex w-full justify-center\">\r\n            <div className=\"w-full flex justify-center font-bold\">\r\n              <button className=\"rounded p-2 w-full bg-mainColor hover:bg-teal-600 text-xl text-white transition-colors\"\r\n              onClick={() => moveToJoin()}>\r\n                회원가입\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"relative mb-10 flex w-full justify-center\">\r\n            <div className=\"text-sm flex justify-center font-bold text-gray-500 hover:text-black cursor-pointer\" onClick={handleClickFindId}>\r\n              아이디 찾기\r\n            </div>\r\n            <span className=\"text-sm font-bold text-gray-500 mx-3\">|</span>\r\n            <div className=\"text-sm flex justify-center font-bold text-gray-500 hover:text-black cursor-pointer\" onClick={handleClickFindPwd}>\r\n              비밀번호 찾기\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"relative flex w-full justify-center\">\r\n            <div className=\"w-full flex justify-center font-bold text-gray-500\">\r\n              <HorizonLine text=\"카카오 간편 로그인\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"flex justify-center\">\r\n          <div className=\"relative mb-4 flex w-full justify-center\">\r\n            <div className=\"w-full flex justify-center font-bold\">\r\n              <button className=\"rounded p-2 w-full bg-gray-300 text-xl text-white\">Google</button>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n        <KakaoLoginComponent />\r\n\r\n        {/* <div className=\"flex justify-center\">\r\n          <div className=\"relative mb-4 flex w-full justify-center\">\r\n            <div className=\"w-full flex justify-center font-bold\">\r\n              <button className=\"rounded p-2 w-full bg-green-400 text-xl text-white\">Naver</button>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n\r\n      <FindIdModal title={'아이디 찾기'} isVisible={findIdModal} callbackFn={handleModalClose}>\r\n        {renderContentId()}\r\n      </FindIdModal>\r\n      <FindPwdModal title={'비밀번호 찾기'} isVisible={findPwdModal} onClose={handleModalClose}>\r\n        {renderContentPwd()}\r\n      </FindPwdModal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default LoginComponent;\r\n","import LoginComponent from '../../components/user/LoginComponent';\r\nimport BasicLayout from '../../layouts/BasicLayout';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <div>\r\n      <BasicLayout>\r\n        <div className=\"flex flex-wrap mb-10 w-full h-full justify-center items-center\">\r\n          <LoginComponent />\r\n        </div>\r\n      </BasicLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["rest_api_key","redirect_uri","getKakaoLoginLink","concat","getAccessToken","async","params","grant_type","client_id","code","authCode","axios","post","headers","data","access_token","getUserWithAccessToken","get","API_SERVER_HOST","accessToken","_ref","text","_jsx","style","width","textAlign","borderBottom","lineHeight","margin","children","background","padding","link","KakaoLoginComponent","_jsxs","className","Link","to","src","alt","title","isVisible","onClose","opacity","visibility","transition","position","top","left","transform","boxShadow","onClick","e","stopPropagation","host","initState","email","pwd","props","loginParam","setLoginParam","useState","moveToLogin","moveToPath","moveToJoin","useCustomLogin","findIdModal","setFindIdModal","findPwdModal","setFindPwdModal","dispatch","useDispatch","step","setStep","name","setName","phone","setPhone","message","setMessage","setEmail","authNum","setAuthNum","inputNum","setInputNum","setPwd","handleChange","target","value","handleModalClose","handleFindId","response","findId","prevStep","handleFindPwd","mailSend","console","log","handleCheckNum","findPwd","imgLogo2","type","placeholder","onChange","loginPost","then","userInfo","login","alert","handleClickFindId","handleClickFindPwd","HorizonLine","FindIdModal","callbackFn","renderContentId","class","FindPwdModal","renderContentPwd","LoginPage","BasicLayout","LoginComponent"],"sourceRoot":""}