{"version":3,"file":"static/js/9110.0de396aa.chunk.js","mappings":"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","sources":["api/buyApi.js","api/chatApi.js","hooks/useCustomLogin.js","components/buy/PartComponent.js","components/buy/ReadComponent.js","pages/buy/ReadPage.js"],"sourcesContent":["import axios from 'axios';\r\nexport const API_SERVER_HOST = 'http://223.130.157.92:22222';\r\nconst prefix = `${API_SERVER_HOST}/api/buy`;\r\n\r\nexport const getOne = async (buyNo) => {\r\n  const res = await axios.get(`${prefix}/read/${buyNo}`);\r\n  return res.data;\r\n};\r\n\r\nexport const getList = async (pageParam, search, sort, category, latitude, longitude) => {\r\n  const { page, size } = pageParam;\r\n  const res = await axios.get(`${prefix}/list`, { params: { page: page, size: size, search: search, sort: sort, category:category, latitude: latitude, longitude: longitude } });\r\n  return res.data;\r\n};\r\n\r\nexport const postAddBuy = async (buy) => {\r\n  const header = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n  const res = await axios.post(`${prefix}/add`, buy, header);\r\n  return res.data;\r\n};\r\n\r\nexport const modify = async (buyNo, buy) => {\r\n  const header = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n  const res = await axios.put(`${prefix}/modify/${buyNo}`, buy, header);\r\n  return res.data;\r\n};\r\n\r\nexport const deleteOne = async (buyNo) => {\r\n  const res = await axios.delete(`${prefix}/delete/${buyNo}`);\r\n  return res.data;\r\n};\r\n\r\nexport const increaseLike = async (buyNo) => {\r\n  const res = await axios.put(`${prefix}/increase/${buyNo}`);\r\n  return res.data;\r\n};\r\n\r\nexport const decreaseLike = async (buyNo) => {\r\n  const res = await axios.put(`${prefix}/decrease/${buyNo}`);\r\n  return res.data;\r\n};\r\n\r\n// ******공동구매 최신 글 보기******\r\n\r\nexport const getLatestBuy = async (pageParam) => {\r\n  const { page, size } = pageParam;\r\n  const res = await axios.get(`${prefix}/latest`, { params: { page: page, size: size } });\r\n  return res.data;\r\n};\r\n\r\n\r\n/* 마이페이지 내가 작성한 글 조회 */\r\nexport const myList = async (id) => {\r\n  const res = await axios.get(`${prefix}/mylist/${id}`);\r\n  return res.data;\r\n};\r\n\r\nexport const myListAll = async (pageParam, id) => {\r\n  const { page, size } = pageParam;\r\n  const res = await axios.get(`${prefix}/mylistall`, { params: { page: page, size: size, id: id} });\r\n  return res.data;\r\n};","import axios from 'axios';\r\nexport const API_SERVER_HOST = 'http://223.130.157.92:22222';\r\n\r\nconst host = `${API_SERVER_HOST}/chat`;\r\n\r\n// 작성자가 게시글 작성 시 자동으로 채팅방 생성, 입장\r\nexport const postCreateRoom = async (userId, title, type, createRequest) => {\r\n  const res = await axios.post(`${host}/room/create`, createRequest, {\r\n    params: { userId, title, type }\r\n  });\r\n  return res.data;\r\n};\r\n\r\n// 특정 채팅방 삭제\r\nexport const deleteChatRoom = async (roomId) => {\r\n  const res = await axios.delete(`${host}/room/delete/${roomId}`);\r\n  return res.data;\r\n};\r\n\r\n// 채팅 기록 조회\r\nexport const getChatHistory = async (roomId) => {\r\n  const res = await axios.get(`${host}/room/history/${roomId}`);\r\n  return res.data;\r\n};\r\n\r\n// 유저의 모든 채팅방 목록 반환\r\nexport const getChatRoom = async (userId) => {\r\n  const res = await axios.get(`${host}/rooms`, { params: { userId } });\r\n  return res.data;\r\n};\r\n\r\n// 공동구매 채팅방의 유저 조회(참여하기 표시)\r\nexport const chatUserInfoBuy = async (buyNo) => {\r\n  const res = await axios.get(`${host}/room/buy/get`, {\r\n    params: { buyNo }\r\n  });\r\n  return res.data;\r\n};\r\n\r\n// 공동구매 채팅방 입장(참여)\r\nexport const enterChatRoomBuy = async (formData) => {\r\n  const response = await axios.post(`${host}/room/buy/enter`, formData);\r\n      return response.data;\r\n};\r\n\r\n// 공동구매 채팅방 퇴장(참여x)\r\nexport const exitChatRoomBuy = async (formData) => {\r\n  const response = await axios.post(`${host}/room/buy/exit`, formData);\r\n      return response.data;\r\n};\r\n\r\n// 동네모임 채팅방의 유저 조회(참여하기 표시)\r\nexport const chatUserInfoTeam = async (teamNo) => {\r\n  const res = await axios.get(`${host}/room/team/get`, {\r\n    params: { teamNo }\r\n  });\r\n  return res.data;\r\n};\r\n\r\n// 동네모임 채팅방 입장(참여)\r\nexport const enterChatRoomTeam = async (formData) => {\r\n  const response = await axios.post(`${host}/room/team/enter`, formData);\r\n      return response.data;\r\n};\r\n\r\n// 동네모임 채팅방 퇴장(참여x)\r\nexport const exitChatRoomTeam = async (formData) => {\r\n  const response = await axios.post(`${host}/room/team/exit`, formData);\r\n      return response.data;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","// 로그인 관련 커스텀 훅\r\nimport { Navigate, useNavigate, createSearchParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginPostAsync, logout } from '../slices/loginSlice';\r\n\r\nconst useCustomLogin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const loginState = useSelector((state) => state.loginSlice); // 로그인 상태\r\n\r\n  const isLogin = loginState.email ? true : false; // 로그인 여부\r\n\r\n  // 로그인 함수\r\n  const doLogin = async (loginParam) => {\r\n    const action = await dispatch(loginPostAsync(loginParam));\r\n    return action.payload;\r\n  };\r\n\r\n  // 로그아웃 함수\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  // 페이지 이동\r\n  const moveToPath = (path) => {\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  //로그인 페이지로 이동\r\n  const moveToLogin = () => {\r\n    navigate({ pathname: '/user/login' }, { replace: true });\r\n  };\r\n\r\n  const moveToJoin = () => {\r\n    navigate({ pathname: '/user/join' }, { replace: true });\r\n  }\r\n\r\n  //로그인 페이지로 이동 컴포넌트\r\n  const moveToLoginReturn = () => {\r\n    return <Navigate replace to=\"/user/login\" />;\r\n  };\r\n\r\n  // 토큰에 따른 예외 처리\r\n  const exceptionHandle = (ex) => {\r\n    console.log('Exception-----------------');\r\n    console.log(ex);\r\n\r\n    const errorMsg = ex.response.data.error;\r\n    const errorStr = createSearchParams({ error: errorMsg }).toString();\r\n\r\n    if (errorMsg === 'REQUIRE_LOGIN') {\r\n      alert('로그인 해야만 합니다.');\r\n      navigate({ pathname: '/user/login', search: errorStr }); // 로그인 페이지로 이동\r\n      return;\r\n    }\r\n\r\n    if (ex.response.data.error === 'ERROR_ACCESSDENIED') {\r\n      alert('해당메뉴를 사용할 수 있는 권한이 없습니다.');\r\n      navigate({ pathname: '/', search: errorStr }); // 홈으로 이동\r\n      return;\r\n    }\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    doLogin,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    moveToLoginReturn,\r\n    exceptionHandle,\r\n    moveToJoin\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { useEffect, useState } from 'react';\r\nimport ProfileComponent from '../common/ProfileComponent';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useCustomLogin from './../../hooks/useCustomLogin';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport ModalComponent from '../common/ModalComponent';\r\nimport ResultModal from '../common/ResultModal';\r\nimport InfoModal from '../common/InfoModal';\r\nimport { chatUserInfoBuy, exitChatRoomBuy } from '../../api/chatApi';\r\nimport { getUser, API_SERVER_HOST } from '../../api/userApi'\r\n\r\nconst host = API_SERVER_HOST;\r\n\r\nconst PartComponent = ({ buyNo }) => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n  const [chatroomInfo, setChatroomInfo] = useState(null);\r\n  const [displayUsers, setDisplayUsers] = useState([]);\r\n  const [result, setResult] = useState(null);\r\n  const loginInfo = useSelector((state) => state.loginSlice);\r\n  const userId = loginInfo?.id;\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchChatroomData = async () => {\r\n      try {\r\n        const chatroomResponse = await chatUserInfoBuy(buyNo);\r\n        const chatroomData = chatroomResponse.data;\r\n        setChatroomInfo(chatroomData);\r\n\r\n        // 작성자 정보 가져오기\r\n        const writerResponse = await getUser(chatroomData.writerId);\r\n\r\n        // 참여자 정보 가져오기\r\n        const readerDataPromises = chatroomData.readerId.map((readerId) => getUser(readerId));\r\n        const readerResponses = await Promise.all(readerDataPromises);\r\n\r\n        // 화면에 표시할 유저들 정보 설정\r\n        const participants = [writerResponse, ...readerResponses];\r\n        setDisplayUsers(participants);\r\n\r\n      } catch (error) {\r\n        console.error('데이터 가져오기 실패', error);\r\n      }\r\n    };\r\n    fetchChatroomData();\r\n  }, [buyNo]);\r\n\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setModalMessage('삭제하시겠습니까?');\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowConfirm(false);\r\n  };\r\n\r\n  const handleResultModalClose = () => {\r\n    setResult(null);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleExitChatRoom = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('userId', userId);\r\n      formData.append('buyNo', buyNo);\r\n\r\n      const isUserInRoom = displayUsers.some(user => user.id === userId);\r\n      if(!isUserInRoom){\r\n        setResult('참여중이 아닙니다.');\r\n      } else if(chatroomInfo.writerId == userId) {\r\n        setResult('자신이 쓴 게시글은 참여를 취소할 수 없습니다.');\r\n      } else {\r\n        await exitChatRoomBuy(formData);\r\n        setDisplayUsers((prevUsers) => prevUsers.filter((user) => user.id !== userId));\r\n        setResult('참여를 취소했습니다.');\r\n        setShowModal(false);\r\n      }\r\n    } catch (error) {\r\n      setResult('참여 취소 실패:', error);\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center bg-slate-100 w-1/5 p-4 ml-10 mr-20 rounded-lg h-30\">\r\n      <div className=\"w-full\">\r\n        <div className=\"bg-blue-200 rounded-lg text-center p-4\">\r\n          <h2>참여 인원</h2>\r\n        </div>\r\n        <hr />\r\n        <div className>\r\n          <div>\r\n            {displayUsers.map((user) => (\r\n              <div className=\"flex p-5\" key={user.id}>\r\n                <img alt=\"Profile_Img\" src={`${host}/api/user/display/${user.profileImage}`} className=\"rounded-full size-10 mr-2\" />\r\n                {user.nickname}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex mt-5\">\r\n          <button className=\"text-base text-white bg-blue-400 p-2 rounded-md w-1/2 mr-2 hover:bg-blue-500\" onClick={() => setShowModal(true)}>\r\n            채팅\r\n          </button>\r\n          <button className=\"text-base text-white bg-slate-400 p-2 rounded-md w-1/2 hover:bg-slate-500\" onClick={handleExitChatRoom}>참여 X</button>\r\n        </div>\r\n      </div>\r\n      {result && <ResultModal title={'알림'} content={result} callbackFn={handleResultModalClose} />}\r\n      <ModalComponent show={showModal} onClose={handleCloseModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { API_SERVER_HOST, deleteOne, getOne, increaseLike, decreaseLike } from '../../api/buyApi';\r\nimport { likeBuy, unlikeBuy, likeInfoBuy, deleteLikeBuy } from '../../api/likeApi';\r\nimport { getUser } from '../../api/userApi';\r\nimport { enterChatRoomBuy } from '../../api/chatApi';\r\nimport { useSelector } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport ModalComponent from '../common/ModalComponent';\r\nimport MapComponent from '../common/MapComponent';\r\nimport iconNext from '../../resources/images/icon-next.png';\r\nimport userIcon from '../../resources/images/user.png';\r\nimport mapIcon from '../../resources/images/map.png';\r\nimport emptyheart from '../../resources/images/heart_empty.png';\r\nimport fullheart from '../../resources/images/heart_full.png';\r\nimport ResultModal from '../common/ResultModal';\r\nimport PartComponent from './PartComponent'\r\nimport Profile_Img from '../../resources/images/profile_img.png';\r\nimport InfoModal from '../common/InfoModal';\r\n\r\nconst initState = {\r\n  buyNo: 0,\r\n  id: 0,\r\n  title: '',\r\n  location: '',\r\n  content: '',\r\n  buyCategory: '',\r\n  max: 0,\r\n  current: 0,\r\n  deadline: '',\r\n  flag: '',\r\n  buyHit: 0,\r\n  uploadFileNames: [],\r\n};\r\n\r\nconst initState2 = {\r\n  likeNo: 0,\r\n  id: 0,\r\n  buyNo: 0,\r\n};\r\n\r\nconst host = API_SERVER_HOST;\r\n\r\nconst ReadComponent = ({ buyNo }) => {\r\n  const [buy, setBuy] = useState(initState);\r\n  const [result, setResult] = useState(null);\r\n  const [addResultModal, setAddResultModal] = useState(null);\r\n  const { moveToList, moveToModify } = useCustomMove();\r\n  const loginInfo = useSelector((state) => state.loginSlice);\r\n  const email = loginInfo?.email;\r\n  const ino = loginInfo.id;\r\n  const [isLiked, setIsLiked] = useState({}); // true/false에 따라 하트 이미지 변경\r\n  const [like, setLike] = useState(initState2);\r\n  const [info, setInfo] = useState(null);\r\n  const [ current, setCurrent ] = useState(0);\r\n  const [ max, setMax ] = useState(0);\r\n\r\n  // 이미지 슬라이더\r\n  const settings = {\r\n    dots: true,\r\n    fade: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    waitForAnimate: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOne(buyNo).then((data) => {\r\n      setBuy(data);\r\n      setCurrent(data.current);\r\n      setMax(data.max);\r\n    });\r\n  }, [buyNo, info]);\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      //로그인시에만 실행\r\n      likeInfoBuy(buyNo, ino).then((data) => {\r\n        setLike(data);\r\n        if (data) {\r\n          //data가 있으면 이미 좋아요 누른글\r\n          setIsLiked(true);\r\n        } else {\r\n          setIsLiked(false);\r\n        }\r\n      });\r\n    }\r\n  }, [email, info]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClickAdd = async () => {\r\n    const formData = new FormData();\r\n    formData.append('userId', ino); // ino 값을 formData에 추가\r\n    formData.append('buyNo', buyNo); // buyNo 값을 formData에 추가\r\n    if(current === max){\r\n      setResult('더이상 참여할수 없습니다.');\r\n    } else{\r\n      try {\r\n        await enterChatRoomBuy(formData); // FormData를 인자로 전달하여 호출\r\n        setResult('참여가 완료되었습니다.');\r\n      } catch (error) {\r\n        setResult('이미 참여 중입니다.', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleClickDelete = () => {\r\n    deleteLikeBuy(buyNo)\r\n    .then(() => {\r\n      return deleteOne(buyNo);\r\n    })\r\n    .then((result) => {\r\n      console.log('delete result : ' + result);\r\n      setResult('삭제되었습니다');\r\n      moveToList()\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setResult(null);\r\n    window.location.reload();\r\n  };\r\n\r\n  const closeInfoModal = () => {\r\n    setInfo(null);\r\n  };\r\n\r\n  const handleLikeClick = () => {\r\n    if (!email) {\r\n      setInfo('로그인 후 이용 가능합니다');\r\n      return;\r\n    }\r\n    if (isLiked) {\r\n      unlikeBuy(like.likeNo);\r\n      decreaseLike(buyNo);\r\n      setInfo('좋아요 목록에서 삭제되었습니다');\r\n    } else {\r\n      const data = {\r\n        id: ino,\r\n        buyNo: buyNo,\r\n      };\r\n      likeBuy(data);\r\n      increaseLike(buyNo);\r\n      setInfo('좋아요 목록에 추가되었습니다');\r\n    }\r\n    setIsLiked(!isLiked);\r\n  };\r\n\r\n  //날짜 포맷 설정\r\n  const formatDeadline = (deadline) => {\r\n    const now = new Date();\r\n    const deadlineDate = new Date(deadline);\r\n\r\n    const padZero = (num) => num.toString().padStart(2, '0'); //숫자를 2자리 문자열로 반환\r\n    const isToday = (date) => {\r\n      return date.getFullYear() === now.getFullYear() && date.getMonth() === now.getMonth() && date.getDate() === now.getDate();\r\n    };\r\n\r\n    const hours = deadlineDate.getHours();\r\n    const minutes = padZero(deadlineDate.getMinutes());\r\n    const amPm = hours < 12 ? '오전' : '오후';\r\n    const displayHours = padZero(hours % 12 || 12); // 24시간 포맷을 12시간 포맷으로 변경\r\n\r\n    if (isToday(deadlineDate)) {\r\n      return `오늘 ${amPm} ${displayHours}:${minutes}까지`;\r\n    } else {\r\n      const year = deadlineDate.getFullYear();\r\n      const month = padZero(deadlineDate.getMonth() + 1);\r\n      const day = padZero(deadlineDate.getDate());\r\n      return `${year}-${month}-${day} ${amPm} ${displayHours}:${minutes}까지`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-slate-100 w-[1000px] ml-auto p-4 rounded-lg\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-left font-semibold ml-2 items-center flex\">\r\n            {buy.flag ? '모집 마감' : '모집 중'}\r\n            <img src={iconNext} alt=\"...\" className=\"w-7 inline\" />\r\n          </span>\r\n          <span className=\"text-right text-base\">{formatDeadline(buy.deadline)}</span>\r\n        </div>\r\n        <div className=\"grid grid-cols-10 w-full mx-auto mt-4 mb-1 text-xl bg-white\">\r\n          <div className=\"col-start-9 col-span-2 ml-5 mt-4 text-right flex justify-center\">\r\n            <img src={email && isLiked ? fullheart : emptyheart} onClick={handleLikeClick} alt=\"...\" className=\"w-7 mr-3 inline\" />\r\n            {buy.buyHit}\r\n          </div>\r\n          <div className=\"col-start-3 col-span-6 h-72 mt-3 mb-10\">\r\n            {buy.uploadFileNames.length > 0 ? (\r\n              <Slider {...settings}>\r\n                {buy.uploadFileNames.map((imgFile, i) => (\r\n                  <img alt=\"buy\" key={i} src={`${host}/api/buy/display/${imgFile}`} className=\"object-contain w-full h-72\" />\r\n                ))}\r\n              </Slider>\r\n            ) : (\r\n              <img alt=\"buy\" src={`${host}/api/buy/display/default.png`} className=\"object-contain w-full h-72\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-start-2 col-span-3 text-base\">\r\n            <span className=\"text-base rounded-3xl text-slate-700 text-center py-1 px-3 mr-2 bg-blue-100 border-blue-300 border\">\r\n              {buy.buyCategory === '1' && '배달음식'}\r\n              {buy.buyCategory === '2' && '생필품'}\r\n              {buy.buyCategory === '3' && '식료품'}\r\n              {buy.buyCategory === '4' && '가구/가전'}\r\n              {buy.buyCategory === '5' && '기타'}\r\n            </span>\r\n            <span className=\"text-base rounded-3xl text-slate-700 text-center py-1 px-3 bg-neutral-100 border-neutral-300 border\">\r\n              <img src={userIcon} alt=\"...\" className=\"w-3 inline mb-1\" />\r\n              &ensp;{buy.current} / {buy.max}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-start-2 col-span-6 text-slate-700 text-2xl my-5\">{buy.title}</div>\r\n          <div className=\"col-start-2 col-span-6 text-base\">\r\n            <img src={mapIcon} alt=\"...\" className=\"w-5 inline\" />\r\n            &ensp;{buy.location}\r\n          </div>\r\n          <div className=\"col-start-2 col-span-8\"></div>\r\n          <div className=\"col-start-8 col-span-2 text-right text-base\">{buy.nickname}</div>\r\n          <div className=\"col-start-2 col-span-8 my-5 border-t-4 py-4 whitespace-pre-wrap\">{buy.content}</div>\r\n          <div className=\"col-start-2 col-span-8 h-[450px]\">\r\n            <MapComponent location={buy.location} />\r\n          </div>\r\n          {/* <div className=\"col-start-2 col-span-8 my-6\">\r\n            <div className=\"flex justify-between space-x-4\"> */}\r\n          {ino === buy.id ? (\r\n            <>\r\n              <div className=\"col-start-2 col-span-8 my-6\">\r\n                <div className=\"flex justify-between space-x-4\">\r\n                  {/* <div className=\"flex\"> */}\r\n                  {/* <div className=\"flex mr-auto\"> */}\r\n                  <button className=\"text-base text-white bg-orange-400 p-2 rounded-md w-1/4 mr-2 hover:bg-red-500\" onClick={() => moveToModify(buyNo)}>\r\n                    수정하기\r\n                  </button>\r\n                  <button className=\"text-base text-white bg-red-400 p-2 rounded-md w-1/4 mr-2 hover:bg-slate-500\" onClick={handleClickDelete}>\r\n                    삭제하기\r\n                  </button>\r\n                  {/* </div> */}\r\n                  {/* 글쓴이는 자동 참여하 참여하기 필요 X */}\r\n                  <button className=\"text-base text-white bg-blue-400 p-2 rounded-md w-1/4 mr-2 hover:bg-blue-500\" >\r\n                    참여하기 \r\n                  </button>\r\n                  <button className=\"text-base text-white bg-slate-400 p-2 rounded-md w-1/4 hover:bg-slate-500\" onClick={() => moveToList()}>\r\n                    목록\r\n                  </button>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"col-start-6 col-span-4 my-6\">\r\n                <div className=\"flex justify-between space-x-4\">\r\n                  <button className=\"text-base text-white bg-blue-400 p-2 rounded-md w-1/2 mr-2 hover:bg-blue-500\" onClick={handleClickAdd}>\r\n                    참여하기\r\n                  </button>\r\n                  <button className=\"text-base text-white bg-slate-400 p-2 rounded-md w-1/2 hover:bg-slate-500\" onClick={() => moveToList()}>\r\n                    목록\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n          {/* </div>\r\n          </div> */}\r\n          {result && <ResultModal title={'알림'} content={`${result}`} callbackFn={closeModal} />}\r\n          {addResultModal && <ResultModal title={'알림'} content={`${addResultModal}`} callbackFn={() => setAddResultModal(null)} />}\r\n          <ModalComponent show={showModal} onClose={handleCloseModal} />\r\n          {/* 좋아요 기능 알림 모달 */}\r\n          {info && <InfoModal title={'알림'} content={`${info}`} callbackFn={closeInfoModal} />}\r\n        </div>\r\n      </div>\r\n      {/* 참여인원 목록 컴포넌트 */}\r\n      <PartComponent buyNo={buyNo} />\r\n    </>\r\n  );\r\n};\r\nexport default ReadComponent;\r\n","import { useParams } from 'react-router-dom';\r\nimport ReadComponent from '../../components/buy/ReadComponent';\r\n\r\nconst ReadPage = () => {\r\n  const { buyNo } = useParams();\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <ReadComponent buyNo={buyNo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadPage;\r\n"],"names":["API_SERVER_HOST","prefix","concat","getOne","async","axios","get","buyNo","data","getList","pageParam","search","sort","category","latitude","longitude","page","size","params","postAddBuy","post","buy","headers","modify","put","deleteOne","delete","increaseLike","decreaseLike","getLatestBuy","myList","id","myListAll","host","postCreateRoom","userId","title","type","createRequest","getChatHistory","roomId","getChatRoom","chatUserInfoBuy","enterChatRoomBuy","formData","exitChatRoomBuy","chatUserInfoTeam","teamNo","enterChatRoomTeam","exitChatRoomTeam","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","email","doLogin","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","error","errorStr","createSearchParams","toString","alert","moveToJoin","_ref","showModal","setShowModal","useState","showConfirm","setShowConfirm","modalMessage","setModalMessage","chatroomInfo","setChatroomInfo","displayUsers","setDisplayUsers","result","setResult","loginInfo","useEffect","chatroomData","writerResponse","getUser","writerId","readerDataPromises","readerId","map","participants","Promise","all","fetchChatroomData","_jsxs","className","children","user","alt","src","profileImage","nickname","onClick","FormData","append","isUserInRoom","some","prevUsers","filter","ResultModal","content","callbackFn","handleResultModalClose","window","location","reload","ModalComponent","show","onClose","handleCloseModal","initState","buyCategory","max","current","deadline","flag","buyHit","uploadFileNames","initState2","likeNo","setBuy","addResultModal","setAddResultModal","moveToList","moveToModify","useCustomMove","ino","isLiked","setIsLiked","like","setLike","info","setInfo","setCurrent","setMax","then","likeInfoBuy","_Fragment","iconNext","now","Date","deadlineDate","padZero","num","padStart","hours","getHours","minutes","getMinutes","amPm","displayHours","date","getFullYear","getMonth","getDate","year","month","day","formatDeadline","fullheart","emptyheart","handleLikeClick","unlikeBuy","likeBuy","length","Slider","dots","fade","infinite","autoplay","speed","slidesToShow","slidesToScroll","waitForAnimate","imgFile","i","userIcon","mapIcon","MapComponent","handleClickDelete","deleteLikeBuy","closeModal","InfoModal","closeInfoModal","PartComponent","ReadPage","useParams","ReadComponent"],"sourceRoot":""}