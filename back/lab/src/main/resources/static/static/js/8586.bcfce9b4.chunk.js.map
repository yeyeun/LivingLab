{"version":3,"file":"static/js/8586.bcfce9b4.chunk.js","mappings":"sNACO,MAAMA,EAAkB,8BACzBC,EAAM,GAAAC,OAAMF,EAAe,eAEpBG,EAASC,gBACFC,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,UAAAC,OAASK,KACnCC,KAGAC,EAAUL,MAAOM,EAAWC,EAAQC,EAAMC,EAAUC,EAAUC,KACzE,MAAM,KAAEC,EAAI,KAAEC,GAASP,EAEvB,aADkBL,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,SAAS,CAACiB,OAAQ,CAAEF,KAAMA,EAAMC,KAAMA,EAAMN,OAAQA,EAAQC,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,EAAUC,UAAWA,MACrJP,IAAI,EAIJW,EAAgBf,gBAETC,EAAAA,EAAMe,KAAK,GAADlB,OAAID,EAAM,QAAQoB,EAD/B,CAACC,QAAQ,CAAC,eAAe,0BAE7Bd,KAGAe,EAASnB,MAAMG,EAAUc,WAElBhB,EAAAA,EAAMmB,IAAI,GAADtB,OAAID,EAAM,YAAAC,OAAWK,GAAYc,EAD7C,CAACC,QAAQ,CAAC,eAAe,0BAE7Bd,KAGAiB,EAAYrB,gBACLC,EAAAA,EAAMqB,OAAO,GAADxB,OAAID,EAAM,YAAAC,OAAWK,KACxCC,KAGAmB,EAAevB,gBACRC,EAAAA,EAAMmB,IAAI,GAADtB,OAAID,EAAM,cAAAC,OAAaK,KACvCC,KAGAoB,EAAexB,gBACRC,EAAAA,EAAMmB,IAAI,GAADtB,OAAID,EAAM,cAAAC,OAAaK,KACvCC,KAGAqB,EAAkBzB,UAC3B,MAAM,KAAEY,EAAI,KAAEC,GAASP,EAEvB,aADkBL,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,WAAW,CAAEiB,OAAQ,CAAEF,KAAMA,EAAMC,KAAMA,MACnET,IAAI,EAINsB,EAAS1B,gBACFC,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,YAAAC,OAAW6B,KACrCvB,KAGAwB,EAAY5B,MAAOM,EAAWqB,KACzC,MAAM,KAAEf,EAAI,KAAEC,GAASP,EAEvB,aADkBL,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,cAAc,CAAEiB,OAAQ,CAAEF,KAAMA,EAAMC,KAAMA,EAAMc,GAAIA,MAChFvB,IAAI,C,kDC1DjB,MAoCA,EApCsByB,IAA+B,IAA9B,WAAEC,EAAU,SAAEC,GAAUF,EAC7C,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACrCJ,EAAWK,MACVC,EAAAA,EAAAA,KAAA,OACEH,UAAU,mDACVI,QAASA,IAAMN,EAAS,CAAEnB,KAAMkB,EAAWQ,WAAYJ,SACxD,UAIDE,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAEDT,EAAWU,YAAYC,KAAKC,IAC3BN,EAAAA,EAAAA,KAAA,OAEEH,UAAS,kEAAAnC,OACTgC,EAAWa,UAAYD,EAAU,cAAgB,eACjDL,QAASA,IAAMN,EAAS,CAAEnB,KAAM8B,IAAWR,SAE1CQ,GALIA,KAQRZ,EAAWc,MACVR,EAAAA,EAAAA,KAAA,OACEH,UAAU,mDACVI,QAASA,IAAMN,EAAS,CAAEnB,KAAMkB,EAAWe,WAAYX,SACxD,UAIDE,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,MAEE,C,6DC3BV,MAAMO,EAASA,CAACC,EAAOC,IAChBD,EAGEE,SAASF,GAFPC,EA6GX,EAxGwBE,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,IAAeC,EAAAA,EAAAA,MAChB1C,EAAOkC,EAAOO,EAAYnD,IAAI,QAAS,GACvCW,EAAOiC,EAAOO,EAAYnD,IAAI,QAAS,IACvCqD,GAAeC,EAAAA,EAAAA,IAAmB,CAAE5C,OAAMC,SAAQ4C,WAgGxD,MAAO,CAAEC,cA9FcpD,IACrB,IAAIqD,EAAW,GACf,GAAIrD,EAAW,CACb,MAAMoC,EAAUI,EAAOxC,EAAUM,KAAM,GACjCgD,EAAUd,EAAOxC,EAAUO,KAAM,IACvC8C,GAAWH,EAAAA,EAAAA,IAAmB,CAC5B5C,KAAM8B,EACN7B,KAAM+C,IACLH,UACL,MACEE,EAAWJ,EAEbJ,EAAS,CAAEU,SAAS,uBAAyBtD,OAAQoD,GAAW,EAkF1CG,eA/EAxD,IACtB,IAAIqD,EAAW,GACf,GAAIrD,EAAW,CACb,MAAMoC,EAAUI,EAAOxC,EAAUM,KAAM,GACjCgD,EAAUd,EAAOxC,EAAUO,KAAM,IACvC8C,GAAWH,EAAAA,EAAAA,IAAmB,CAC5B5C,KAAM8B,EACN7B,KAAM+C,IACLH,UACL,MACEE,EAAWJ,EAEbJ,EAAS,CAAEU,SAAS,wBAA0BtD,OAAQoD,GAAW,EAmE3BI,iBAhEdzD,IACxB,IAAIqD,EAAW,GACf,GAAIrD,EAAW,CACb,MAAMoC,EAAUI,EAAOxC,EAAUM,KAAM,GACjCgD,EAAUd,EAAOxC,EAAUO,KAAM,IACvC8C,GAAWH,EAAAA,EAAAA,IAAmB,CAC5B5C,KAAM8B,EACN7B,KAAM+C,IACLH,UACL,MACEE,EAAWJ,EAEbJ,EAAS,CAAEU,SAAS,0BAA4BtD,OAAQoD,GAAW,EAoDXK,oBAjD7B1D,IAC3B,IAAIqD,EAAW,GACf,GAAIrD,EAAW,CACb,MAAMoC,EAAUI,EAAOxC,EAAUM,KAAM,GACjCgD,EAAUd,EAAOxC,EAAUO,KAAM,IACvC8C,GAAWH,EAAAA,EAAAA,IAAmB,CAC5B5C,KAAM8B,EACN7B,KAAM+C,IACLH,UACL,MACEE,EAAWJ,EAEbJ,EAAS,CAAEU,SAAS,6BAA+BtD,OAAQoD,GAAW,EAqCOM,oBAlClD3D,IAC3B,IAAIqD,EAAW,GACf,GAAIrD,EAAW,CACb,MAAMoC,EAAUI,EAAOxC,EAAUM,KAAM,GACjCgD,EAAUd,EAAOxC,EAAUO,KAAM,IACvC8C,GAAWH,EAAAA,EAAAA,IAAmB,CAC5B5C,KAAM8B,EACN7B,KAAM+C,IACLH,UACL,MACEE,EAAWJ,EAEbJ,EAAS,CAAEU,SAAS,6BAA+BtD,OAAQoD,GAAW,EAsB4BO,WAnBjFA,CAACC,EAAKC,KACvBjB,EAAS,CAAEU,SAAS,IAAD/D,OAAMqE,EAAI,UAAArE,OAASsE,GAAO7D,OAAQgD,GAAe,EAkB0Cc,oBAfpFA,CAACF,EAAKC,KAE9BjB,EADU,MAATgB,EACQ,CAAEN,SAAS,uBAAD/D,OAAyBsE,GAAO7D,OAAQgD,GAE5C,MAATY,EACG,CAAEN,SAAS,uBAAD/D,OAAyBsE,GAAO7D,OAAQgD,GAE5C,MAATY,EACG,CAAEN,SAAS,0BAAD/D,OAA4BsE,GAAO7D,OAAQgD,GAGrD,CAAEM,SAAS,wBAAD/D,OAA0BsE,GAAO7D,OAAQgD,GAC9D,EAGmI3C,OAAMC,OAAM,C,sHC5GnJ,MAAMyD,EAAY,CAChBC,QAAS,GACT/B,YAAa,GACbgC,eAAgB,KAChBrC,MAAM,EACNS,MAAM,EACN6B,WAAY,EACZnC,SAAU,EACVO,SAAU,EACV6B,UAAW,EACX/B,QAAS,GAGLgC,EAAO/E,EAAAA,GAoGb,EAlGyBgF,KACvB,MAAM,KAAEhE,EAAI,KAAEC,EAAI,iBAAEkD,EAAgB,WAAEG,IAAehB,EAAAA,EAAAA,MAC9CpB,EAAY+C,IAAiBC,EAAAA,EAAAA,UAASR,GAEvC3C,GADYoD,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,aAC1BtD,IAErBuD,EAAAA,EAAAA,YAAU,MACRtD,EAAAA,EAAAA,IAAU,CAAEhB,OAAMC,QAAQc,GAAIwD,MAAK/E,IACjCyE,EAAczE,EAAK,GACnB,GACD,CAACQ,EAAMC,EAAMc,IAEhB,MAAMyD,EAAkBC,IACtB,MAAMC,EAAM,IAAIC,KACVC,EAAe,IAAID,KAAKF,GAExBI,EAAWrB,GAAQA,EAAIX,WAAWiC,SAAS,EAAG,KAK9CC,EAAQH,EAAaI,WACrBC,EAAUJ,EAAQD,EAAaM,cAC/BC,EAAOJ,EAAQ,GAAK,eAAO,eAC3BK,EAAeP,EAAQE,EAAQ,IAAM,IAE3C,IATiBM,EASLT,GAREU,gBAAkBZ,EAAIY,eAAiBD,EAAKE,aAAeb,EAAIa,YAAcF,EAAKG,YAAcd,EAAIc,UAShH,MAAM,gBAANtG,OAAaiG,EAAI,KAAAjG,OAAIkG,EAAY,KAAAlG,OAAI+F,EAAO,gBACvC,CACL,MAAMQ,EAAOb,EAAaU,cACpBI,EAAQb,EAAQD,EAAaW,WAAa,GAC1CI,EAAMd,EAAQD,EAAaY,WACjC,MAAM,GAANtG,OAAUuG,EAAI,KAAAvG,OAAIwG,EAAK,KAAAxG,OAAIyG,EAAG,KAAAzG,OAAIiG,EAAI,KAAAjG,OAAIkG,EAAY,KAAAlG,OAAI+F,EAAO,eACnE,CAhBiBI,KAgBjB,EAGF,OACE7D,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oCAAmCC,UAChDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sDAAqDC,UAClEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeC,UAC5BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oCAAmCC,UAChDE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,+CAA8CC,UAC3DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yDAAwDC,SAAC,+BACxEE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6BAA4BC,UACzCE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+DAA8DC,SAAA,EAC3EE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gDAA+CC,UAC5DE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,+CAA8CC,SAAC,gCAE/DE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,UACdG,EAAAA,EAAAA,KAAA,OAAKT,GAAG,QAAQM,UAAU,iBAAgBC,SACvCJ,EAAWyC,QAAQiC,OAAS,EAC3B1E,EAAWyC,QAAQ9B,KAAKxB,IACtBe,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gFAAgFI,QAASA,IAAM6B,EAAW,SAAUjD,EAAOd,UAAU+B,SAAA,EAClJE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaC,UAC1BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oCAAoCwE,IAAG,GAAA3G,OAAK6E,EAAI,wBAAA7E,OAAuBmB,EAAOyF,gBAAgB,IAAMC,IAAI,WAEzHvE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,aAAYC,UACzBE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mCAAkCC,UAC/CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,4EAA2EC,SAAA,CAC9D,MAA1BjB,EAAO2F,gBAA0B,eACP,MAA1B3F,EAAO2F,gBAA0B,eACP,MAA1B3F,EAAO2F,gBAA0B,eACP,MAA1B3F,EAAO2F,gBAA0B,eACP,MAA1B3F,EAAO2F,gBAA0B,mBAEpCxE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gCAA+BC,SAAEjB,EAAO4F,SACvD7E,EAAAA,EAAAA,MAAA,KAAGC,UAAU,8BAA6BC,SAAA,CAAEjB,EAAO6F,MAAM,aACzD1E,EAAAA,EAAAA,KAAA,KAAGH,UAAU,mFAAkFC,SAAEjB,EAAO8F,YACxG3E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0BAAyBC,SAAEkD,EAAenE,EAAOoE,yBAUxEjD,EAAAA,EAAAA,KAAA,OAAAF,SAAK,4EAIXE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAa,CAAClF,WAAYA,EAAYC,SAAUgC,uBAS7D,C","sources":["api/marketApi.js","components/common/PageComponent.js","hooks/useCustomMyPage.js","pages/myPage/activity/MyMarketListPage.js"],"sourcesContent":["import axios from 'axios';\r\nexport const API_SERVER_HOST = 'http://223.130.157.92:22222';\r\nconst prefix = `${API_SERVER_HOST}/api/market`;\r\n\r\nexport const getOne = async (marketNo) => {\r\n  const res = await axios.get(`${prefix}/read/${marketNo}`);\r\n  return res.data;\r\n};\r\n\r\nexport const getList = async (pageParam, search, sort, category, latitude, longitude) => {\r\n  const { page, size } = pageParam;\r\n  const res = await axios.get(`${prefix}/list`, {params: { page: page, size: size, search: search, sort: sort, category: category, latitude: latitude, longitude: longitude }});\r\n  return res.data;\r\n};\r\n\r\n\r\nexport const postAddMarket = async(market) => {\r\n  const header = {headers:{\"Content-Type\":\"multipart/form-data\"}};\r\n  const res = await axios.post(`${prefix}/add`, market, header);\r\n  return res.data;\r\n}\r\n\r\nexport const modify = async(marketNo, market) => {\r\n  const header = {headers:{\"Content-Type\":\"multipart/form-data\"}};\r\n  const res = await axios.put(`${prefix}/modify/${marketNo}`, market, header);\r\n  return res.data;\r\n}\r\n\r\nexport const deleteOne = async(marketNo) => {\r\n  const res = await axios.delete(`${prefix}/delete/${marketNo}`);\r\n  return res.data;\r\n}\r\n\r\nexport const increaseLike = async(marketNo) => {\r\n  const res = await axios.put(`${prefix}/increase/${marketNo}`);\r\n  return res.data;\r\n}\r\n\r\nexport const decreaseLike = async(marketNo) => {\r\n  const res = await axios.put(`${prefix}/decrease/${marketNo}`);\r\n  return res.data;\r\n}\r\n\r\nexport const getLatestMarket = async (pageParam) => {\r\n    const { page, size } = pageParam;\r\n    const res = await axios.get(`${prefix}/latest`, { params: { page: page, size: size } });\r\n    return res.data;\r\n}\r\n\r\n/* 마이페이지 내가 작성한 글 조회 */\r\nexport const myList = async (id) => {\r\n  const res = await axios.get(`${prefix}/mylist/${id}`);\r\n  return res.data;\r\n};\r\n\r\nexport const myListAll = async (pageParam, id) => {\r\n  const { page, size } = pageParam;\r\n  const res = await axios.get(`${prefix}/mylistall`, { params: { page: page, size: size, id: id} });\r\n  return res.data;\r\n};","const PageComponent = ({ serverData, movePage }) => {\r\n  return (\r\n    <div className=\"m-6 flex justify-center\">\r\n      {serverData.prev ? (\r\n        <div\r\n          className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n          onClick={() => movePage({ page: serverData.prevPage })}\r\n        >\r\n          Prev\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {serverData.pageNumList.map((pageNum) => (\r\n        <div\r\n          key={pageNum}\r\n          className={`m-2 p-2 w-12 text-center rounded shadow-md text-white\r\n        ${serverData.current === pageNum ? \"bg-gray-500\" : \"bg-blue-500\"}`}\r\n          onClick={() => movePage({ page: pageNum })}\r\n        >\r\n          {pageNum}\r\n        </div>\r\n      ))}\r\n      {serverData.next ? (\r\n        <div\r\n          className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n          onClick={() => movePage({ page: serverData.nextPage })}\r\n        >\r\n          Next\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PageComponent;\r\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMyPage = () => {\r\n  const navigate = useNavigate();\r\n  const [queryParams] = useSearchParams();\r\n  const page = getNum(queryParams.get(\"page\"), 1);\r\n  const size = getNum(queryParams.get(\"size\"), 10);\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToBuyList = (pageParam) => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    navigate({ pathname: `/myPage/activity/buy`, search: queryStr });\r\n  };\r\n\r\n  const moveToTeamList = (pageParam) => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    navigate({ pathname: `/myPage/activity/team`, search: queryStr });\r\n  };\r\n\r\n  const moveToMarketList = (pageParam) => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    navigate({ pathname: `/myPage/activity/market`, search: queryStr });\r\n  };\r\n\r\n  const moveToShareRoomList = (pageParam) => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    navigate({ pathname: `/myPage/activity/shareroom`, search: queryStr });\r\n  };\r\n\r\n  const moveToCommunityList = (pageParam) => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 1);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n        size: sizeNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    navigate({ pathname: `/myPage/activity/community`, search: queryStr });\r\n  };\r\n\r\n  const moveToRead = (type,num) => {\r\n    navigate({ pathname: `/${type}/read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  const moveToReadCommunity = (type,num) => {\r\n    if(type === '1'){\r\n      navigate({ pathname: `/community/tip/read/${num}`, search: queryDefault });\r\n    }\r\n    else if(type === '2'){\r\n      navigate({ pathname: `/community/qna/read/${num}`, search: queryDefault });\r\n    }\r\n    else if(type === '3'){\r\n      navigate({ pathname: `/community/review/read/${num}`, search: queryDefault });\r\n    }\r\n    else{\r\n      navigate({ pathname: `/community/help/read/${num}`, search: queryDefault });\r\n    }\r\n  };\r\n\r\n  return { moveToBuyList, moveToTeamList, moveToMarketList, moveToShareRoomList, moveToCommunityList, moveToRead, moveToReadCommunity, page, size };\r\n};\r\n\r\nexport default useCustomMyPage;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useCustomMyPage from '../../../hooks/useCustomMyPage';\r\nimport { API_SERVER_HOST, myListAll } from '../../../api/marketApi';\r\nimport PageComponent from '../../../components/common/PageComponent';\r\n\r\nconst initState = {\r\n  dtoList: [], // 한 페이지에 불러오는 게시물 갯수\r\n  pageNumList: [],\r\n  pageRequestDto: null,\r\n  prev: false,\r\n  next: false,\r\n  totalCount: 0,\r\n  prevPage: 0,\r\n  nextPage: 0,\r\n  totalPage: 0,\r\n  current: 0,\r\n};\r\n\r\nconst host = API_SERVER_HOST;\r\n\r\nconst MyMarketListPage = () => {\r\n  const { page, size, moveToMarketList, moveToRead } = useCustomMyPage();\r\n  const [serverData, setServerData] = useState(initState);\r\n  const loginInfo = useSelector((state) => state.loginSlice);\r\n  const id = loginInfo.id;\r\n\r\n  useEffect(() => {\r\n    myListAll({ page, size }, id).then(data => {\r\n      setServerData(data);\r\n    })\r\n  }, [page, size, id]);\r\n\r\n  const formatDeadline = (deadline) => {\r\n    const now = new Date();\r\n    const deadlineDate = new Date(deadline);\r\n\r\n    const padZero = (num) => num.toString().padStart(2, '0');\r\n    const isToday = (date) => {\r\n      return date.getFullYear() === now.getFullYear() && date.getMonth() === now.getMonth() && date.getDate() === now.getDate();\r\n    };\r\n\r\n    const hours = deadlineDate.getHours();\r\n    const minutes = padZero(deadlineDate.getMinutes());\r\n    const amPm = hours < 12 ? '오전' : '오후';\r\n    const displayHours = padZero(hours % 12 || 12);\r\n\r\n    if (isToday(deadlineDate)) {\r\n      return `오늘 ${amPm} ${displayHours}:${minutes}까지`;\r\n    } else {\r\n      const year = deadlineDate.getFullYear();\r\n      const month = padZero(deadlineDate.getMonth() + 1);\r\n      const day = padZero(deadlineDate.getDate());\r\n      return `${year}-${month}-${day} ${amPm} ${displayHours}:${minutes}까지`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-xl flex-col h-fit flex w-4/5\">\r\n      <div className=\"bg-white w-full rounded px-10 py-4 h-full shadow-md\">\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n            <div className=\"inline-block min-w-full py-2 sm:px-6 lg:px-8\">\r\n              <div className=\"overflow-hidden\">\r\n                <div className=\"text-2xl pl-2 my-2 border-l-4 font-Jua border-teal-300\">나의 활동</div>\r\n                <div className=\"flex h-full justify-center\">\r\n                  <div className=\"w-full m-4\">\r\n                    <div className=\"p-6 h-full overflow-hidden bg-white rounded-lg border shadow\">\r\n                      <div className=\"flex justify-between items-center ml-2 mt-0.5\">\r\n                        <h3 className=\"text-xl font-bold leading-none text-gray-900\">동네장터</h3>\r\n                      </div>\r\n                      <hr className=\"my-4\" />\r\n                      <div id=\"items\" className=\"flex flex-wrap\">\r\n                        {serverData.dtoList.length > 0 ? (\r\n                          serverData.dtoList.map((market) => (\r\n                            <div className=\"flex border p-2 m-1 w-[49%] h-48 box-border cursor-pointer hover:bg-slate-100\" onClick={() => moveToRead(`market`, market.marketNo)}>\r\n                              <div className=\"h-full w-48\">\r\n                                <img className=\"object-cover h-full w-full shadow\" src={`${host}/api/market/display/${market.uploadFileNames[0]}`} alt='...' />\r\n                              </div>\r\n                              <div className=\"p-4 w-full\">\r\n                                <div className=\"flex justify-between items-start\">\r\n                                  <div className=\"w-full\">\r\n                                    <span className=\"text-base font-semibold bg-slate-200 text-center pb-0.5 px-2 mr-2 rounded\">\r\n                                      {market.marketCategory === '1' && '구매'}\r\n                                      {market.marketCategory === '2' && '판매'}\r\n                                      {market.marketCategory === '3' && '교환'}\r\n                                      {market.marketCategory === '4' && '나눔'}\r\n                                      {market.marketCategory === '5' && '기타'}\r\n                                    </span>\r\n                                    <div className=\"block mt-3 text-lg text-black\">{market.title}</div>\r\n                                    <p className=\"mt-2 text-slate-500 text-sm\">{market.price}원</p>\r\n                                    <p className=\"mt-2 text-slate-500 text-sm w-72 whitespace-nowrap overflow-hidden text-ellipsis\">{market.location}</p>\r\n                                    <div className=\"text-right text-sm my-2\">{formatDeadline(market.deadline)}</div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                          )\r\n                        )\r\n                          :\r\n                          (\r\n                            <div>작성한 게시물이 없습니다</div>\r\n                          )\r\n                        }\r\n                      </div>\r\n                      <PageComponent serverData={serverData} movePage={moveToMarketList} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMarketListPage;"],"names":["API_SERVER_HOST","prefix","concat","getOne","async","axios","get","marketNo","data","getList","pageParam","search","sort","category","latitude","longitude","page","size","params","postAddMarket","post","market","headers","modify","put","deleteOne","delete","increaseLike","decreaseLike","getLatestMarket","myList","id","myListAll","_ref","serverData","movePage","_jsxs","className","children","prev","_jsx","onClick","prevPage","_Fragment","pageNumList","map","pageNum","current","next","nextPage","getNum","param","defaultValue","parseInt","useCustomMyPage","navigate","useNavigate","queryParams","useSearchParams","queryDefault","createSearchParams","toString","moveToBuyList","queryStr","sizeNum","pathname","moveToTeamList","moveToMarketList","moveToShareRoomList","moveToCommunityList","moveToRead","type","num","moveToReadCommunity","initState","dtoList","pageRequestDto","totalCount","totalPage","host","MyMarketListPage","setServerData","useState","useSelector","state","loginSlice","useEffect","then","formatDeadline","deadline","now","Date","deadlineDate","padZero","padStart","hours","getHours","minutes","getMinutes","amPm","displayHours","date","getFullYear","getMonth","getDate","year","month","day","length","src","uploadFileNames","alt","marketCategory","title","price","location","PageComponent"],"sourceRoot":""}